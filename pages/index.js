import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState } from 'react'

export default function Home({ data }) {
  const questionCount = data.length

  const emptyArray = new Array(questionCount).fill(null)
  const [questions, setQuestions] = useState(emptyArray)
  const questionsAnswered = questions.filter(q => q !== null).length
  const [score, setScore] = useState(0)
  console.log(data)
  return (
    <div className={styles.container}>
      <Head>
        <title>Green River Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/greenRiver.png" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://www.greenriver.com/">Green River</a>
        </h1>
        <p>You have answered {questionsAnswered} out of {questionCount}</p>

        {data.map((item, questionIndex) => (
          <div key={item.id} className={styles.item}>
            <h2>Define: "{item.word}"</h2>
            {item.choices.map((choice, choiceIndex) => (
              <div key={choiceIndex}>
                <input type="radio" name={questionIndex} value={choiceIndex}
                  onChange={(e) => {
                    const newQuestions = [...questions]
                    newQuestions[questionIndex] = e.target.value
                    setQuestions(newQuestions)
                  }
                  }
                />
                <label htmlFor={choiceIndex}>{choice.text}</label>
              </div>
            ))}
          </div>
        ))}
        <span>Your Score: {score} </span>
        <button type='button' onClick={() => {
          const newScore = questions.reduce((acc, q, index) => {
            console.log(index)
            if (q === null) {
              return acc
            }
            const correctChoice = data[index].correctChoiceIndex
            const selectedChoice = questions[index]
            console.log("correct", correctChoice, "selected", selectedChoice, "q", q)
            const isCorrect = correctChoice === parseInt(selectedChoice);
            if (isCorrect) {
              return acc + 1
            }
            return acc
          }, 0)
          console.log("newScore", newScore)
          setScore(newScore)
        }}>Submit</button>
      </main>



      <footer className={styles.footer}>
        <a
          href="https://portfolio.boskind.tech/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Robert Boskind
        </a>
      </footer>
    </div>
  )
}


export async function getStaticProps() {
  // Call an external API endpoint 

  const url = `https://gist.githubusercontent.com/ttoomey/c8b14270e076165a97ff0f4e3ee251d3/raw/9b2477163e3b6617045db4caf6165c818e068918/questions.json`;

  //get the data from the url
  const data = await fetch(url)
    .then((response) => response.json())
    .catch((error) => console.log(error));


  return {
    props: { data }, // will be passed to the page component as props
  };
}